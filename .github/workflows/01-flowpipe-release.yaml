name: "01 - Flowpipe: Release"

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: "Select Release Type"
        options:
          # to change the values in this option, we also need to update the condition test below in at least 3 location. Search for github.event.inputs.environment
          - Development (beta)
          - Final (RC and final release)
        required: true
      version:
        description: "Version (without 'v')"
        required: true
        default: 1.1.\invalid
      confirmDevelop:
        description: Confirm running on develop branch
        required: true
        type: boolean

env:
  GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}

jobs:
  create_test_build:
    name: Create test build
    runs-on: ubuntu-latest
    steps:
      - name: validate
        if: github.ref == 'refs/heads/main'
        env:
          CONFIRM_MAIN: ${{ github.event.inputs.confirmMain }}
        run: |
          if [ "$CONFIRM_MAIN" == 'false' ]; then
            echo "It looks like you've accidentally tried to run this action in main branch. Either: "
            echo " - Re-run the action and select the branch you wanted, or"
            echo " - If you really do want to run this for main, then re-run and tick the box to confirm"
            exit 1
          fi

      - name: Checkout
        uses: actions/checkout@v4
        with:
          path: flowpipe
          ref: ${{ github.event.ref }}

      - name: Checkout Pipe Fittings Components repository
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.PIPE_FITTINGS_DEPLOY_PRIVATE_KEY }}
          repository: turbot/pipe-fittings
          path: pipe-fittings
          ref: v1.0.x

      - name: Checkout Flowpipe SDK Go repository
        uses: actions/checkout@v4
        with:
          ssh-key: ${{ secrets.FLOWPIPE_GO_SDK_DEPLOY_PRIVATE_KEY }}
          repository: turbot/flowpipe-sdk-go
          path: flowpipe-sdk-go
          ref: main

      # this is required, check golangci-lint-action docs
      - uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          cache: false # setup-go v4 caches by default, do not change this parameter, check golangci-lint-action doc: https://github.com/golangci/golangci-lint-action/pull/704

      - name: Build UI
        run: make build-ui
        working-directory: flowpipe

      # The ui build often changes the yarn.lock file, this causes issue with GoReleaser that needs a clean git status
      # I'm hesitant to use the shortcut of --skip-validate or doing a localbuild (skip publish/snapshot) and uploading the
      # binary ourselves. The other alternative is to commit the yarn.lock file post UI build which I'm not keen on either doing it
      # automatically.
      #
      # For now I'm going to remove the yarn.lock post UI build.
      - name: Clean UI artifacts
        working-directory: flowpipe
        run: |
          git status
          git restore ui/form/yarn.lock
          git status

      - name: Release dry-run to create binaries
        working-directory: flowpipe
        run: |-
          make release-dry-run

      - name: Check binaries
        working-directory: flowpipe
        run: |
          ls -al dist/

      - name: Move build artifacts
        run: |
          sudo chown -R runner:docker $GITHUB_WORKSPACE/flowpipe/dist
          mkdir ~/artifacts
          mv $GITHUB_WORKSPACE/flowpipe/dist/flowpipe.linux.amd64.tar.gz ~/artifacts/linux.tar.gz
          mv $GITHUB_WORKSPACE/flowpipe/dist/flowpipe.linux.arm64.tar.gz ~/artifacts/linux-arm.tar.gz
          mv $GITHUB_WORKSPACE/flowpipe/dist/flowpipe.darwin.amd64.tar.gz ~/artifacts/darwin.tar.gz
          mv $GITHUB_WORKSPACE/flowpipe/dist/flowpipe.darwin.arm64.tar.gz ~/artifacts/darwin-arm.tar.gz

      - name: List Build Artifacts
        run: ls -l ~/artifacts

      - name: Save Linux Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact-linux
          path: ~/artifacts/linux.tar.gz
          if-no-files-found: error

      - name: Save Linux ARM Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact-linux-arm
          path: ~/artifacts/linux-arm.tar.gz
          if-no-files-found: error

      - name: Save MacOS Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact-darwin
          path: ~/artifacts/darwin.tar.gz
          if-no-files-found: error

      - name: Save MacOS ARM Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact-darwin-arm
          path: ~/artifacts/darwin-arm.tar.gz
          if-no-files-found: error

  ensure_branch_in_homebrew:
    name: Ensure branch exists in homebrew-tap
    needs: [create_test_build]
    runs-on: ubuntu-latest
    steps:
      - name: Calculate version
        id: calculate_version
        run: |
          echo "VERSION=v${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Parse semver string
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@3576f3a20a39f8752fe0d8195f5ed384090285dc # v1.3.0
        with:
          input_string: ${{ github.event.inputs.version }}

      - name: Checkout
        if: steps.semver_parser.outputs.prerelease == ''
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: turbot/homebrew-tap
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          ref: main

      - name: Delete base branch if exists
        if: steps.semver_parser.outputs.prerelease == ''
        run: |
          git fetch --all
          git push origin --delete flowpipe-brew
          git push origin --delete $VERSION
        continue-on-error: true

      - name: Create base branch
        if: steps.semver_parser.outputs.prerelease == ''
        run: |
          git checkout -b flowpipe-brew
          git push --set-upstream origin flowpipe-brew

  build_and_release:
    name: Build and Release Flowpipe
    needs: [ensure_branch_in_homebrew]
    runs-on: ubuntu-latest
    steps:
      - name: validate
        if: github.ref == 'refs/heads/develop'
        env:
          CONFIRM_MAIN: ${{ github.event.inputs.confirmDevelop }}
        run: |
          if [ "$CONFIRM_MAIN" == 'false' ]; then
            echo "It looks like you've accidentally tried to run this action in develop branch. Either: "
            echo " - Re-run the action and select the branch you wanted, or"
            echo " - If you really do want to run this for develop, then re-run and tick the box to confirm"
            exit 1
          fi

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          path: flowpipe
          ref: ${{ github.event.ref }}

      - name: Checkout Pipe Fittings Components repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ssh-key: ${{ secrets.PIPE_FITTINGS_DEPLOY_PRIVATE_KEY }}
          repository: turbot/pipe-fittings
          path: pipe-fittings
          ref: v1.7.x

      - name: Checkout Flowpipe SDK Go repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          ssh-key: ${{ secrets.FLOWPIPE_GO_SDK_DEPLOY_PRIVATE_KEY }}
          repository: turbot/flowpipe-sdk-go
          path: flowpipe-sdk-go
          ref: v1.0.x

      # - name: Unshallow
      #   run: git fetch --prune --unshallow

      - name: Calculate version
        id: calculate_version
        run: |
          if [ "${{ github.event.inputs.environment }}" = "Development (beta)" ]; then
            echo "VERSION=v${{ github.event.inputs.version }}-beta.$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV
          else
            echo "VERSION=v${{ github.event.inputs.version }}" >> $GITHUB_ENV
          fi

      - name: Tag Release
        run: |
          cd flowpipe
          git config user.name "Flowpipe GitHub Actions Bot"
          git config user.email noreply@github.com
          git tag $VERSION
          git push origin $VERSION

      # this is required, check golangci-lint-action docs
      - uses: actions/setup-go@19bb51245e9c80abacb2e91cc42b33fa478b8639 # v4.2.1
        with:
          go-version: "1.23"
          cache: false # setup-go v4 caches by default, do not change this parameter, check golangci-lint-action doc: https://github.com/golangci/golangci-lint-action/pull/704

      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4.4.0
        with:
          node-version: 20

      - name: Setup release environment
        run: |-
          cd flowpipe
          echo 'GITHUB_TOKEN=${{secrets.GH_ACCESS_TOKEN}}' > .release-env

      - name: Build UI
        run: make build-ui
        working-directory: flowpipe

      # The ui build often changes the yarn.lock file, this causes issue with GoReleaser that needs a clean git status
      # I'm hesitant to use the shortcut of --skip-validate or doing a localbuild (skip publish/snapshot) and uploading the
      # binary ourselves. The other alternative is to commit the yarn.lock file post UI build which I'm not keen on either doing it
      # automatically.
      #
      # For now I'm going to remove the yarn.lock post UI build.
      - name: Clean UI artifacts
        working-directory: flowpipe
        run: |
          git status
          git restore ui/form/yarn.lock
          git status

      - name: Release publish
        run: |-
          cd flowpipe
          make release

  create_pr_in_homebrew:
    name: Create PR in homebrew-tap
    if: ${{ github.event.inputs.environment == 'Final (RC and final release)' }}
    needs: [build_and_release]
    runs-on: ubuntu-latest
    steps:
      - name: Calculate version
        id: calculate_version
        run: |
          echo "VERSION=v${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Parse semver string
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@3576f3a20a39f8752fe0d8195f5ed384090285dc # v1.3.0
        with:
          input_string: ${{ github.event.inputs.version }}

      - name: Checkout
        if: steps.semver_parser.outputs.prerelease == ''
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: turbot/homebrew-tap
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          ref: main

      - name: Create a new branch off the base branch
        if: steps.semver_parser.outputs.prerelease == ''
        run: |
          git fetch --all
          git checkout flowpipe-brew
          git checkout -b $VERSION
          git push --set-upstream origin $VERSION

      - name: Close pull request if already exists
        if: steps.semver_parser.outputs.prerelease == ''
        run: |
          gh pr close $VERSION
        continue-on-error: true

      - name: Create pull request
        if: steps.semver_parser.outputs.prerelease == ''
        run: |
          gh pr create --base main --head $VERSION --title "$VERSION" --body "Update formula"

  update_pr_for_versioning:
    name: Update PR
    if: ${{ github.event.inputs.environment == 'Final (RC and final release)' }}
    needs: [create_pr_in_homebrew]
    runs-on: ubuntu-latest
    steps:
      - name: Calculate version
        id: calculate_version
        run: |
          echo "VERSION=v${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Parse semver string
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@3576f3a20a39f8752fe0d8195f5ed384090285dc # v1.3.0
        with:
          input_string: ${{ github.event.inputs.version }}

      - name: Checkout
        if: steps.semver_parser.outputs.prerelease == ''
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          repository: turbot/homebrew-tap
          token: ${{ secrets.GH_ACCESS_TOKEN }}
          ref: v${{ github.event.inputs.version }}

      - name: Update live version
        if: steps.semver_parser.outputs.prerelease == ''
        run: |
          scripts/formula_versioning_flowpipe.sh
          git config user.name "Flowpipe GitHub Actions Bot"
          git config user.email noreply@github.com
          git add .
          git commit -m "Versioning brew formulas"
          git push origin $VERSION

  trigger_smoke_tests:
    name: Trigger smoke tests
    # if: ${{ github.event.inputs.environment == 'Final (RC and final release)' }}
    needs: [update_pr_for_versioning]
    runs-on: ubuntu-latest
    steps:
      - name: Calculate version
        id: calculate_version
        run: |
          echo "VERSION=v${{ github.event.inputs.version }}" >> $GITHUB_ENV

      - name: Parse semver string
        id: semver_parser
        uses: booxmedialtd/ws-action-parse-semver@3576f3a20a39f8752fe0d8195f5ed384090285dc # v1.3.0
        with:
          input_string: ${{ github.event.inputs.version }}

      - name: Trigger smoke test workflow
        # if: steps.semver_parser.outputs.prerelease == ''
        run: |
          echo "Triggering smoke test workflow for version $VERSION..."
          gh workflow run "12-test-post-release-linux-distros.yaml" \
            --ref ${{ github.ref }} \
            --field version=$VERSION \
            --repo ${{ github.repository }}
        env:
          GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Get smoke test workflow run URL
        # if: steps.semver_parser.outputs.prerelease == ''
        run: |
          echo "Waiting for smoke test workflow to start..."
          sleep 10

          # Get the most recent run of the smoke test workflow
          RUN_ID=$(gh run list \
            --workflow="12-test-post-release-linux-distros.yaml" \
            --repo ${{ github.repository }} \
            --limit 1 \
            --json databaseId \
            --jq '.[0].databaseId')

          if [ -n "$RUN_ID" ]; then
            WORKFLOW_URL="https://github.com/${{ github.repository }}/actions/runs/$RUN_ID"
            echo "✅ Smoke test workflow triggered successfully!"
            echo "🔗 Monitor progress at: $WORKFLOW_URL"
            echo ""
            echo "Workflow details:"
            echo "  - Version: $VERSION"
            echo "  - Workflow: 12-test-post-release-linux-distros.yaml"
            echo "  - Run ID: $RUN_ID"
          else
            echo "⚠️  Could not retrieve workflow run ID. Check manually at:"
            echo "https://github.com/${{ github.repository }}/actions/workflows/12-test-post-release-linux-distros.yaml"
          fi
        env:
          GH_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
